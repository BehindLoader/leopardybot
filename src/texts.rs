use crate::error::Result;
use std::fmt::Write;

pub struct TextFormatter;

impl TextFormatter {
    pub fn round_over() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "<b>–†–∞—É–Ω–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è</b> ‚åõÔ∏è",)?;
        writeln!(writer, "–ö—Ç–æ –Ω–µ —É—Å–ø–µ–ª, —Ç–æ—Ç –æ–ø–æ–∑–¥–∞–ª!")?;
        Ok(writer)
    }

    pub fn game_over() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "üèÅ <b>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞</b> üèÅ")?;
        writeln!(writer, "–û—Ç–ª–∏—á–Ω–æ —Å—ã–≥—Ä–∞–Ω–æ!")?;
        writeln!(writer)?;
        writeln!(writer, "‚Ü©Ô∏è /play - —Å—ã–≥—Ä–∞—Ç—å –≤ –Ω–æ–≤—É—é –∏–≥—Ä—É")?;
        Ok(writer)
    }

    pub fn new_group_chat() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")?;
        Ok(writer)
    }

    pub fn start() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã")?;
        writeln!(writer)?;
        writeln!(writer, "–í–≤–µ–¥–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã")?;
        Ok(writer)
    }

    pub fn help() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "<b>–ö–≤–∏–∑ –±–æ—Ç</b> üß†")?;
        writeln!(writer)?;
        writeln!(writer, "üïπ <b>–†–µ–∂–∏–º—ã –∏–≥—Ä—ã</b>:")?;
        writeln!(writer, "üëâ –í –ª–∏—á–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–µ —Å –±–æ—Ç–æ–º –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è –ø–æ –º–µ—Ä–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞—Ö")?;
        writeln!(
            writer,
            "üëâ –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –∏ –∏–≥—Ä–∞ –ø–æ–¥–µ–ª–µ–Ω–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤"
        )?;
        writeln!(writer)?;
        writeln!(writer, "üí¨ <b>–ö–æ–º–∞–Ω–¥—ã</b>:")?;
        writeln!(writer, "üéÆ /play - —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É")?;
        writeln!(writer, "üìï /help - –ø–æ–º–æ—â—å")?;
        Ok(writer)
    }

    pub fn group_game_already_started() -> Result<String> {
        let mut writer = String::new();
        writeln!(
            writer,
            "<b>–ò–≥—Ä–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞! ü§î –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞</b> ‚è≥"
        )?;
        Ok(writer)
    }

    pub fn single_game_already_started() -> Result<String> {
        let mut writer = String::new();
        writeln!(
            writer,
            "<b>–í—ã —É–∂–µ –∏–≥—Ä–∞–µ—Ç–µ! ü§î –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É</b> üëÜ"
        )?;
        writeln!(
            writer,
            "–ï—Å–ª–∏ –≤—ã –æ—á–∏—Å—Ç–∏–ª–∏ —á–∞—Ç —Å –±–æ—Ç–æ–º –∏–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π –ø—Ä–∏—á–∏–Ω–µ –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∏–∫—Ç–æ—Ä–∏–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ /restart"
        )?;
        Ok(writer)
    }

    pub fn cannot_find_new_quiz() -> Result<String> {
        let mut writer = String::new();
        writeln!(writer, "<b>–ù–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üò∞</b>")?;
        write!(
            writer,
            "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ <i>–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç</i> –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã. "
        )?;
        write!(writer, "–°–ª–µ–¥—É—é—â—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –≤—ã, –≤–µ—Ä–æ—è—Ç–Ω–æ, —É–∂–µ –≤–∏–¥–µ–ª–∏. ")?;
        write!(
            writer,
            "–ú—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–æ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ –≤ –Ω–∏—Ö –±—ã—Å—Ç—Ä–µ–µ üòÅ"
        )?;
        Ok(writer)
    }
}
