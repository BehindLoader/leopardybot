//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "poll")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub game_id: i32,
    pub correct_option_id: i32,
    pub close_date: Option<i32>,
    pub handled: Option<bool>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::game::Entity",
        from = "Column::GameId",
        to = "super::game::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Game,
    #[sea_orm(has_many = "super::player_poll_answer::Entity")]
    PlayerPollAnswer,
}

impl Related<super::game::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Game.def()
    }
}

impl Related<super::player_poll_answer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlayerPollAnswer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
